# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Maven Release Build Template

on:
  workflow_call:
    inputs:
      runner:
        description: 'Runner'
        required: false
        default: 'ubuntu-latest'
        type: string 
      releaseVersion:
        description: 'Release version'
        required: true
        type: string
      tagName:
        description: 'Release tag'
        required: true
        type: string

env:
  RELEASE_VERSION: ${{ inputs.releaseVersion }}
  TAG_NAME: ${{ inputs.tagName }}

jobs:
  build:

    runs-on: ${{ inputs.runner }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
 
    - name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: maven-repo-cache
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: SIGN_KEY_PASS
        
    - name: Configure git user
      run: |
        git config --global user.name ${{ github.actor }}
        git config --global user.email "jeaf@anaptecs.de"
        git config --global user.name "JEAF Development Team"
        git config --global credential.helper cache
        
    - name: View settings.xml
      run: cat /home/runner/.m2/settings.xml
        
    - name: Prepare and Publish Release
      run: mvn -Darguments="-Duser.country=DE -Duser.language=de -Duser.timezone=Europe/Berlin" -Dusername=jeaf-anaptecs -DreleaseVersion=$RELEASE_VERSION -Dtag=$TAG_NAME --batch-mode release:prepare release:perform -PRelease
      shell: sh
      env:
        SIGN_KEY_PASS: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}  
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        